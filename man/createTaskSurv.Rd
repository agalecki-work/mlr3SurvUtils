% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createTaskSurv.R
\name{createTaskSurv}
\alias{createTaskSurv}
\title{Create a Survival or Classification Task}
\usage{
createTaskSurv(
  data,
  target_info,
  backend_info = NULL,
  event_strata = TRUE,
  traceon = FALSE
)
}
\arguments{
\item{data}{A \code{data.table} or \code{data.frame} containing the dataset.}

\item{target_info}{A named character vector with keys "id", "time", "event", and "task_type",
giving information about the target variable, the time variable, and the type of the task.}

\item{backend_info}{A list containing configuration options for the backend, including:
\code{id}, \code{option}, \code{primary_key}, \code{feature_cols}, \code{filter}, \code{time_cutoff},
\code{CCH_subcohort}, \code{add_to_strata_cols}, and \code{weight}.}

\item{event_strata}{A logical value indicating whether the \code{event} specified in \code{target_info} should be included in strata (default is \code{TRUE}).}

\item{traceon}{A logical value indicating whether to print tracing information for debugging (default is \code{FALSE}).}
}
\value{
An object of class \code{TaskSurv} or \code{TaskClassif}, depending on the task_type specified in \code{target_info}.
This object contains the configured task suitable for analysis in the mlr3 framework.
}
\description{
This function creates a survival analysis task using the mlr3proba framework, which can
be configured for various sampling options and feature specifications.
It allows for the inclusion of additional strata or subcohorts according to the provided backend configuration.
}
\details{
This function supports various sampling options, including simple random sampling (SRS)
and case-cohort (CCH) design. Depending on the specified \code{option}, different metadata
columns may be included as stratification factors to better support analytical objectives.
\itemize{
\item \strong{SRS}: If selected, it will use simple random sampling for the entire cohort.
\item \strong{CCH}: In this mode, event-related strata will include subcohort indicators to refine the population under consideration.
\item \strong{CCH1}: Select subcohort subjects only, filter those with subcohort membership confirmed.
}

The \code{target_info} parameter provides essential metadata for defining the task's survival outcome.
Each element should correspond to:
\itemize{
\item \strong{id}: A string identifier for the task target.
\item \strong{time}: The column name in the dataset representing the time-to-event or censoring.
\item \strong{event}: The column that indicates if the event of interest has occurred.
\item \strong{task_type}: The type of task, such as "surv" for survival data, or "classif" for classification problem.
}

The \code{backend_info} parameter is a configuration list that dictates how the data is processed and includes:
\itemize{
\item \strong{id}: A string identifier for the backend task.
\item \strong{option}: Specifies the sampling method to use, such as "SRS" (Simple Random Sampling) or "CCH" (Case-Cohort). Option "CCH1" considers subcohort data only.
\item \strong{primary_key}: The column name used as the unique identifier for the data rows. Column has to be numeric.
\item \strong{feature_cols}: A vector of column names to be used as predictor features.
\item \strong{filter}: A string expressing conditions to subset the data, e.g., "BMI < 35".
\item \strong{time_cutoff}: A numeric value specifying the time cutoff for survival data.
\item \strong{CCH_subcohort}: The column name indicating subgroup membership when "CCH" sampling is used.
\item \strong{add_to_strata_cols}: Additional columns to include in the stratification process.
\item \strong{weight}: A named vector mapping sampling options to weight column names.
}
}
\examples{
# Example setup:
data(cancer, package="survival")
ovarian$id = 1:nrow(ovarian)

target_info <- c(id = "tm1", time = "futime", event = "fustat", task_type = "surv")
backend_info <- list(
  id = "ovarian",
  option = "SRS",
  primary_key = "id",
  feature_cols = c("age","resid.ds","rx"),
  filter = "age < 70",
  time_cutoff = 1000,
  add_to_strata_cols = "rx"
)

# Create task
task <- createTaskSurv(data = ovarian, target_info = target_info, backend_info = backend_info)
print(task)

}
